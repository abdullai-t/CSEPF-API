# Generated by Django 4.1 on 2024-07-14 11:16

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Application",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("info", models.JSONField(default=dict)),
                ("full_name", models.CharField(max_length=255)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("phone_number", models.CharField(max_length=20)),
                ("school", models.CharField(max_length=255)),
                ("program", models.CharField(max_length=255)),
                ("address", models.CharField(max_length=255)),
                ("status", models.CharField(default="pending", max_length=255)),
                ("cohort", models.CharField(default=2024, max_length=255)),
            ],
            options={
                "verbose_name": "Application",
                "verbose_name_plural": "Applications",
                "db_table": "applications",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Fellow",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("info", models.JSONField(default=dict)),
                ("is_completed", models.BooleanField(default=False)),
                ("cohort", models.CharField(default=2024, max_length=255)),
                ("program", models.CharField(max_length=255)),
                ("school", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Fellow",
                "verbose_name_plural": "Fellows",
                "db_table": "fellows",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PolicySubTopic",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("info", models.JSONField(default=dict)),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Policy Sub Topic",
                "verbose_name_plural": "Policy Sub Topics",
                "db_table": "policy_sub_topics",
            },
        ),
        migrations.CreateModel(
            name="PolicyTopic",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("info", models.JSONField(default=dict)),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Policy Topic",
                "verbose_name_plural": "Policy Topics",
                "db_table": "policy_topics",
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("info", models.JSONField(default=dict)),
                ("full_name", models.CharField(max_length=255)),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "picture",
                    models.ImageField(
                        blank=True, null=True, upload_to="user_profile_pictures"
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("bio", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "User Profile",
                "verbose_name_plural": "User Profiles",
                "db_table": "user_profiles",
            },
        ),
        migrations.CreateModel(
            name="Testimonial",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("info", models.JSONField(default=dict)),
                ("content", models.TextField()),
                (
                    "media",
                    models.ImageField(blank=True, null=True, upload_to="testimonials"),
                ),
                ("is_published", models.BooleanField(default=False)),
                ("is_featured", models.BooleanField(default=False)),
                ("tags", models.ManyToManyField(to="database.policysubtopic")),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="testimonials",
                        to="database.fellow",
                    ),
                ),
            ],
            options={
                "verbose_name": "Testimonial",
                "verbose_name_plural": "Testimonials",
                "db_table": "testimonials",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Staff",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("info", models.JSONField(default=dict)),
                ("role", models.CharField(max_length=255)),
                ("bio", models.TextField(blank=True, null=True)),
                ("is_featured", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="database.userprofile",
                    ),
                ),
            ],
            options={
                "verbose_name": "Staff",
                "verbose_name_plural": "Staff",
                "db_table": "staff",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Presentation",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("info", models.JSONField(default=dict)),
                ("title", models.CharField(max_length=255)),
                ("content", models.TextField(blank=True, null=True)),
                ("media", models.FileField(upload_to="presentations")),
                ("presenter", models.CharField(max_length=255)),
                ("is_published", models.BooleanField(default=False)),
                ("link", models.URLField(blank=True, null=True)),
                ("is_featured", models.BooleanField(default=False)),
                (
                    "tags",
                    models.ManyToManyField(
                        related_name="presentations", to="database.policysubtopic"
                    ),
                ),
            ],
            options={
                "verbose_name": "Presentation",
                "verbose_name_plural": "Presentations",
                "db_table": "presentations",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="policysubtopic",
            name="topic",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="sub_topics",
                to="database.policytopic",
            ),
        ),
        migrations.AddField(
            model_name="fellow",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="database.userprofile"
            ),
        ),
    ]
